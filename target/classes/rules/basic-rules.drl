import com.sample.Applicant;

rule "Incomplete due to risk"
    salience 9
    when
        a : Applicant(a.getRound() != 3, a.getRisk()==Applicant.HIGH)
    then
    	a.setState(Applicant.INCOMPLETE);
        System.out.println( "Application for " + a.getName() + ", id: " + a.getId() + " was marked incomplete,  state is " + a.getState());
        a.setRound(3);
        update(a);
end

rule "Denied"
    when
        a : Applicant(a.getState() == COMPLETE, a.getRound() != 3, a.getApproval_status() == Applicant.DENIED)
    then
    	a.setState(Applicant.COMPLETE);
        System.out.println( "Application for " + a.getName() + ", id: " + a.getId() + " was denied with a score of " + a.getApproval_score() + " state is " + a.getState());
        a.setRound(3);
        update(a);
end

rule "Pending"
    when
        a : Applicant(a.getState() == COMPLETE, a.getRound() != 3, a.getApproval_status() == Applicant.PENDING)
    then
    	a.setState(Applicant.INCOMPLETE);
        System.out.println( "Application for " + a.getName() + ", id: " + a.getId() + " is still pending" + " state is " + a.getState() );
        a.setRound(3);
        update(a);
end

rule "Advanced Coverage"
	salience 0
	when
		a : Applicant(a.getState() == COMPLETE, a.getRound() != 3, a.getApproval_status() == Applicant.APPROVED_ADVANCED)
	then
		a.setState(Applicant.COMPLETE);
		System.out.println( "Application for " + a.getName() + ", id: " + a.getId() + " was approved with advanced coverage with a score of " + a.getApproval_score() + " state is " + a.getState());
		a.setRound(3);
		update(a);
end

rule "Basic Coverage"
	salience 0
	when
		a : Applicant(a.getState() == COMPLETE, a.getRound() != 3, a.getApproval_status() == Applicant.APPROVED_BASIC)
	then
		a.setState(Applicant.COMPLETE);
		System.out.println( "Application for " + a.getName() + ", id: " + a.getId() + " was approved with basic coverage with a score of " + a.getApproval_score() + " state is " + a.getState()); 
		a.setRound(3);
		update(a);
end


rule "Gender-Male"
	salience 6
	when 
		a : Applicant(a.getRound() == 0,  a.getApproval_status() == Applicant.PENDING, a.getGender() == Applicant.MALE )
	then 
		a.setApproval_score(a.getApproval_score() + 1);
		System.out.println(a.getName() + ": gender-male, current score: " + a.getApproval_score());
		
end 

rule "Gender-Female"
	salience 6
	when 
		a : Applicant(a.getRound() == 0,  a.getApproval_status() == Applicant.PENDING, a.getGender() == Applicant.FEMALE )
	then 
		a.setApproval_score(a.getApproval_score() + 3);
		System.out.println(a.getName() + ": gender-female, current score: " + a.getApproval_score());
		
end 

rule "Status-Married"
	salience 6
	when 
		a : Applicant(a.getRound() == 0,  a.getApproval_status() == Applicant.PENDING, a.isSingle() == false )
	then 
		a.setApproval_score(a.getApproval_score() + 3);
		System.out.println(a.getName() + ": status-married, current score: " + a.getApproval_score());
		
end 

rule "Status-Unmarried"
	salience 6
	when 
		a : Applicant(a.getRound() == 0,  a.getApproval_status() == Applicant.PENDING, a.isSingle() == true )
	then 
		a.setApproval_score(a.getApproval_score() + 1);
		System.out.println(a.getName() + ": status-unmarried, current score: " + a.getApproval_score());
		
end 

rule "Age 20 and under"
	salience 6
	when 
		a : Applicant(a.getRound() == 0,  a.getApproval_status() == Applicant.PENDING, a.getDob().getYear() >= 2000  )
	then 
		a.setApproval_score(a.getApproval_score() - 3);
		System.out.println(a.getName() + ": age range 20 and under, current score: " + a.getApproval_score());
		a.setRound(1);
		update(a);	
end 


rule "Age 21 to 40"
	salience 6
	when 
		a : Applicant(a.getRound() == 0, a.getApproval_status() == Applicant.PENDING, a.getDob().getYear() < 2000 && a.getDob().getYear() >= 1980 )
	then 
		a.setApproval_score(a.getApproval_score() );
		System.out.println(a.getName() + ": age range 21-40, current score: " + a.getApproval_score());
		a.setRound(1);
		update(a);
end 

rule "Age 41 to 55"
	salience 6
	when 
		a : Applicant(a.getRound() == 0, a.getApproval_status() == Applicant.PENDING, a.getDob().getYear() < 1980 && a.getDob().getYear() >= 1965 )
	then 
		a.setApproval_score(a.getApproval_score() + 2);
		System.out.println(a.getName() + ": age range 41-55, current score: " + a.getApproval_score());
		a.setRound(1);
		update(a);
		
end 

rule "Age 70 and up"
	salience 6
	when 
		a : Applicant(a.getRound() == 0, a.getApproval_status() == Applicant.PENDING, a.getDob().getYear() <= 1950 )
	then 
		a.setApproval_score(a.getApproval_score() - 1 );
		System.out.println(a.getName() + ": age range 70 and up, current score: " + a.getApproval_score());
		a.setRound(1);
		update(a);	
end


rule "North Region Setter"
	salience 10
	when 
		a : Applicant(a.getRound() == 0,  a.getApproval_status() == Applicant.PENDING, a.getZipcode() <= 25000  )
	then 
		a.setRegion(Applicant.NORTH);
		System.out.println(a.getName() + ": region-north, current score: " + a.getApproval_score());
		
		
end

rule "East Region Setter"
	salience 10
	when 
		a : Applicant(a.getRound() == 0,  a.getApproval_status() == Applicant.PENDING, a.getZipcode() <= 50000 && a.getZipcode() > 25000 )
	then 
		a.setRegion(Applicant.EAST);
		System.out.println(a.getName() + ": region-east, current score: " + a.getApproval_score());
		
end

rule "South Region Setter"
	salience 10
	when 
		a : Applicant(a.getRound() == 0,  a.getApproval_status() == Applicant.PENDING, a.getZipcode() <= 75000 && a.getZipcode() > 50000 )
	then 
		a.setRegion(Applicant.SOUTH);
		System.out.println(a.getName() + ": region-south, current score: " + a.getApproval_score());
		
end


rule "West Region Setter"
	salience 10
	when 
		a : Applicant(a.getRound() == 0, a.getApproval_status() == Applicant.PENDING, a.getZipcode() > 75000 )
	then 
		a.setRegion(Applicant.WEST);
		System.out.println(a.getName() + ": region-west, current score: " + a.getApproval_score());
		
end

rule "Region Score Adder"
	salience 3
	when 
		a : Applicant(a.getRound()==1, a.getApproval_status() == Applicant.APPROVED_BASIC, a.getRegion() >= 0)
	then 
		a.setApproval_score(a.getApproval_score() + a.getRegion() );
		System.out.println("added region score");
		System.out.println(a.getName() + ": region-add, current score: " + a.getApproval_score());
end

rule "Higher Education Status"
	salience 3
	when 
		a : Applicant(a.getRound()==1, a.getApproval_status() == Applicant.APPROVED_BASIC, a.getEducation_status() >=1 )
	then 
		a.setApproval_score(a.getApproval_score() + 5);
		System.out.println(a.getName() + ": higher-education, current score: " + a.getApproval_score());
		a.setRound(2);
		update(a);		
end

rule "Basic Coverage Check"
	salience 5
	when 
		a : Applicant( a.getApproval_status() == Applicant.PENDING, a.getApproval_score() >= 4)
	then 
		a.setApproval_status(Applicant.APPROVED_BASIC);
		System.out.println(a.getName() + " upgraded to basic");
		update(a);
		
end
		
rule "Advanced Coverage Check"
	salience 2
	when 
		a : Applicant( a.getApproval_status() == Applicant.APPROVED_BASIC, a.getApproval_score() >= 9)
	then 
		a.setApproval_status(Applicant.APPROVED_ADVANCED);
		System.out.println(a.getName() + " upgraded to advanced");	
		update(a);
		
end

rule "Denied Coverage Check"
	salience 1
	when 
		a : Applicant( a.getApproval_status() == Applicant.PENDING, a.getApproval_score() < 4)
	then 
		a.setApproval_status(Applicant.DENIED);
		System.out.println(a.getName() + " achieved no coverage");
		update(a);
end

